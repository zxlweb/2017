1.let和const命令
 let:块级作用域，只能先声明在赋值，负责会报错,存在暂时性死区（TDZ）
 if (true) {
   // TDZ开始
   tmp = 'abc'; // ReferenceError
   console.log(tmp); // ReferenceError

   let tmp; // TDZ结束
   console.log(tmp); // undefined

   tmp = 123;
   console.log(tmp); // 123
 }
 为什么引入let变量：
   （1）由于var变量具有声明提前的功能，内层变量可能覆盖外层变量
   （2）用来计数的循环变量会泄露，全局变量
 const:
 4.字符串的正则表达式
   match(),split(),search(),replace()
 6.数值的扩展
   ES6将全局方法parseInt()和parseeFloat(),移植到Number对象上
   es5:parseInt('12.34')//12
       parseFlat('12.34#')//12.34
   es6:Number.parseInt('12.34')//12
      Number.parseFloat('12.34#')//12.34
 7:数组的扩展
    （1）Array.from():将类数组对象(通俗点讲：就是含有length属性的数据结构)，(iterator)可遍历对象（Set，Map,字符串）等转为真正的数组
    注：（1）常见的类数组对象：dom操作返回的NodeList对象，以及函数内部的arguments对象
        （2）一个拥有 [Symbol.iterator]() 方法的对象被认为是可遍历的（iterable）
    （2）for...of
     遍历数组的数据，支持break，continue和return





